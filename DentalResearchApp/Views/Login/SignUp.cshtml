@using DentalResearchApp.Models
<!DOCTYPE html>

@model SignUpModel
@{
    ViewBag.Title = "Dental Research App - Sign Up";
 
}
<html>
<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="/css/Styles.css" type="text/css" />
    <script type="text/javascript" src="/js/PasswordValidation.js"></script>
    <script src="/js/jquery.min.js"></script>
    <title>Dental Research App - Sign Up</title>
</head>
<body>
    <div class="box">
        <h1 class="secondHeadline">Sign Up</h1>
        @Html.Hidden("errors", Model.Errors)
        @using (Html.BeginForm("CreateUser", "login", FormMethod.Post, new { onsubmit = "return checkForm(this)"}))
        {
            @Html.TextBoxFor(x => x.FirstName, "Firstname", new { @class = "inputField form-control", @id = "firstName", @placeholder = "First Name", @required = true, @maxlength = "20" })
            @Html.TextBoxFor(x => x.LastName, "Lastname", new { @class = "inputField form-control", @id = "lastName", @placeholder = "Last Name", @required = true, @maxlength = "50" })
            @Html.TextBoxFor(x => x.Email, "E-mail", new { @class = "inputField form-control", @id = "email", @placeholder = "E-mail", @required = true, @type = "email", @maxlength = "60" })
            @Html.TextBoxFor(x => x.Institution, "Institution", new { @class = "inputField form-control", @id = "institution", @placeholder = "Institution", @required = true, @maxlength = "100" })
            @Html.PasswordFor(x => x.Password, new { @class = "inputField form-control", @id = "pwd1", @name = "pwd1", @placeholder = "Password", @type = "password", @required = true })
            @Html.PasswordFor(x => x.Password, new { @class = "inputField form-control", @id = "pwd2", @name = "pwd2", @placeholder = "Confirm Password", @type = "password", @required = true })
            @Html.DropDownListFor(x => x.Country, new SelectList(Model.Country), new { @class = "inputField form-control", @id = "country", @required = true, style = "width:270px" })
            @Html.Hidden("LinkId", Context.Request.QueryString.ToString().Substring(4, Context.Request.QueryString.ToString().Length - 4))
            <br />
            <input type="submit" value="Sign up" id="UserDataSubmit" class="form-group" style="margin-left: 140px; margin-top: 10px">
        }
    </div>
<script type="text/javascript">
    window.onload = () => {
        var errors = @Model.Errors.ToString().ToLower();
        if(errors === true) {
            var errorMsg = "There already exist a user with the E-mail: @Model.Email";
            window.alert(errorMsg);
        }
    }
</script>
</body>
</html>
